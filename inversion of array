#include <bits/stdc++.h>
using namespace std;

long long int merge(int a[], int temp[], int low, int mid, int high){
    long long int i=low, k=low, j=mid, c=0;
    while(i<= mid-1 && j<=high){
        if(a[i] <= a[j]){
            temp[k++] = a[i++];
        }
        else{
            temp[k++] = a[j++];
            c = c + (mid-i);
        }
    }
    
    while(i<=mid-1){
        temp[k++] = a[i++];
    }
    
    while(j<=high){
        temp[k++] = a[j++];
    }
    
    for(int it=low; it<=high; it++) a[it]=temp[it];
    
    
return c;
}



long long int count(int a[], int temp[], int low, int high){
    long long int inv=0,mid;
    if(low<high){
        mid = low+ (high-low)/2;
        inv = count(a, temp, low, mid);
        inv+= count(a,temp,mid+1,high);
        
        inv+= merge(a,temp,low,mid+1,high);
    }
return inv;
}

long long int mergesort(int a[], int n){
    int temp[n];
    return count(a,temp,0,n-1);
}


int main() {
	int t; cin>>t; while(t--){
	    int n; cin>>n; 
	    int a[n]; for(int i=0; i<n; i++) cin>>a[i];
	    cout<<mergesort(a,n)<<'\n';
	}
	return 0;
}
